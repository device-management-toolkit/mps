{
	"info": {
		"_postman_id": "fc56b9cb-afb3-4f0d-8dd2-5f8f4a5f6f0f",
		"name": "MPS",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Metadata",
			"item": [
				{
					"name": "Get Devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:3000/metadata",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "3000",
							"path": [
								"metadata"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Devices (Tags Query)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:3000/metadata",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "3000",
							"path": [
								"metadata"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"guid\": \"143e4567-e89b-12d3-a456-426614174000\",\r\n        \"hostname\": \"hostname\",\r\n        \"tags\": []\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:3000/metadata",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "3000",
							"path": [
								"metadata"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Devices by Guid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var env = pm.environment.get(\"env\");\r",
									"if (env == 'dev') {\r",
									"    pm.test(\"Status code is 404\", function () {\r",
									"        pm.response.to.have.status(404);\r",
									"    });\r",
									"} else {\r",
									"    pm.test(\"Status code is 200\", function () {\r",
									"        pm.response.to.have.status(200);\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:3000/metadata/dc09fce2-a602-11ea-90a8-90cf9ac8ee00",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "3000",
							"path": [
								"metadata",
								"dc09fce2-a602-11ea-90a8-90cf9ac8ee00"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:3000/metadata/143e4567-e89b-12d3-a456-426614174000",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "3000",
							"path": [
								"metadata",
								"143e4567-e89b-12d3-a456-426614174000"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "All Devices",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{protocol}}://{{host}}:3000/devices",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"port": "3000",
					"path": [
						"devices"
					]
				}
			},
			"response": []
		},
		{
			"name": "All Devices with tag filter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{protocol}}://{{host}}:3000/devices",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"port": "3000",
					"path": [
						"devices"
					]
				}
			},
			"response": []
		},
		{
			"name": "All Devices with status filter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{protocol}}://{{host}}:3000/devices",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"port": "3000",
					"path": [
						"devices"
					]
				}
			},
			"response": []
		},
		{
			"name": "Authorize",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\":\"standalone\",\r\n    \"password\":\"G@ppm0ym\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{protocol}}://{{host}}:3000/authorize",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"port": "3000",
					"path": [
						"authorize"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Stats",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Expect to have 3 properties\",function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.totalCount).to.be.above(-1)\r",
							"    pm.expect(jsonData.connectedCount).to.be.above(-1)\r",
							"    pm.expect(jsonData.disconnectedCount).to.be.above(-1)\r",
							"    \r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{protocol}}://{{host}}:3000/devices/stats",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"port": "3000",
					"path": [
						"devices",
						"stats"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}